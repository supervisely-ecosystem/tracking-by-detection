#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º —Å –∏–º–ø–æ—Ä—Ç–∞–º–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—É—Ç–µ–π
"""

import os
import sys
from pathlib import Path

def debug_project_structure():
    """–ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞"""
    print("=== PROJECT STRUCTURE ANALYSIS ===")
    
    # –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è
    current_dir = Path.cwd()
    script_dir = Path(__file__).parent
    
    print(f"Current working directory: {current_dir}")
    print(f"Script directory: {script_dir}")
    print(f"Python path: {sys.path[:3]}...")
    
    # –ü–æ–∏—Å–∫ –ø–∞–ø–∫–∏ supervisely
    possible_sly_paths = [
        current_dir / "supervisely",
        script_dir / "supervisely", 
        script_dir.parent / "supervisely",
        current_dir.parent / "supervisely"
    ]
    
    print("\n=== LOOKING FOR SUPERVISELY DIRECTORY ===")
    sly_path = None
    for path in possible_sly_paths:
        print(f"Checking: {path}")
        if path.exists() and path.is_dir():
            print(f"  ‚úÖ Found!")
            if (path / "supervisely").exists():
                print(f"  ‚úÖ Contains supervisely subdirectory")
                sly_path = path
                break
            elif (path / "__init__.py").exists():
                print(f"  ‚úÖ Is a Python package")
                sly_path = path.parent
                break
        else:
            print(f"  ‚ùå Not found")
    
    if sly_path:
        print(f"\n‚úÖ Supervisely path found: {sly_path}")
        return sly_path
    else:
        print(f"\n‚ùå Supervisely path not found!")
        return None

def test_basic_imports(sly_path):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö –∏–º–ø–æ—Ä—Ç–æ–≤"""
    print("\n=== TESTING BASIC IMPORTS ===")
    
    if sly_path and sly_path not in sys.path:
        sys.path.insert(0, str(sly_path))
        print(f"Added to sys.path: {sly_path}")
    
    # –¢–µ—Å—Ç –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞
    try:
        import supervisely as sly
        print("‚úÖ import supervisely as sly - OK")
        print(f"   Supervisely version: {getattr(sly, '__version__', 'unknown')}")
        print(f"   Supervisely location: {sly.__file__}")
    except ImportError as e:
        print(f"‚ùå import supervisely failed: {e}")
        return False
    
    # –¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ –∞–Ω–Ω–æ—Ç–∞—Ü–∏–π
    try:
        from supervisely import Annotation, Label, Rectangle
        print("‚úÖ from supervisely import Annotation, Label, Rectangle - OK")
    except ImportError as e:
        print(f"‚ùå Annotation imports failed: {e}")
        return False
    
    return True

def test_tracker_imports():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤ —Ç—Ä–µ–∫–µ—Ä–æ–≤"""
    print("\n=== TESTING TRACKER IMPORTS ===")
    
    # –¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ tracker –±–∞–∑–æ–≤–æ–≥–æ –º–æ–¥—É–ª—è
    try:
        from supervisely.nn.tracker import tracker
        print("‚úÖ from supervisely.nn.tracker import tracker - OK")
        print(f"   Tracker module location: {tracker.__file__}")
    except ImportError as e:
        print(f"‚ùå Base tracker import failed: {e}")
    
    # –¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ BaseTracker
    try:
        from supervisely.nn.tracker.tracker import BaseTracker
        print("‚úÖ from supervisely.nn.tracker.tracker import BaseTracker - OK")
    except ImportError as e:
        print(f"‚ùå BaseTracker import failed: {e}")
    
    # –¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ BoTSORT
    try:
        from supervisely.nn.tracker.botsort.tracker.mc_bot_sort import BoTSORT
        print("‚úÖ from supervisely.nn.tracker.botsort.tracker.mc_bot_sort import BoTSORT - OK")
    except ImportError as e:
        print(f"‚ùå Original BoTSORT import failed: {e}")
        print(f"    Error details: {e}")
    
    # –¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ Supervisely –æ–±–µ—Ä—Ç–∫–∏
    try:
        from supervisely.nn.tracker.botsort.sly_tracker import BoTTracker
        print("‚úÖ from supervisely.nn.tracker.botsort.sly_tracker import BoTTracker - OK")
    except ImportError as e:
        print(f"‚ùå Supervisely BoTTracker import failed: {e}")
        print(f"    Error details: {e}")

def explore_tracker_directory(sly_path):
    """–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Ç—Ä–µ–∫–µ—Ä–æ–≤"""
    print("\n=== EXPLORING TRACKER DIRECTORY STRUCTURE ===")
    
    if not sly_path:
        print("‚ùå No supervisely path provided")
        return
    
    tracker_path = sly_path / "supervisely" / "nn" / "tracker"
    print(f"Looking in: {tracker_path}")
    
    if not tracker_path.exists():
        print(f"‚ùå Tracker directory not found: {tracker_path}")
        return
    
    print("üìÅ Tracker directory contents:")
    for item in sorted(tracker_path.iterdir()):
        if item.is_dir():
            print(f"  üìÅ {item.name}/")
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤–∞–∂–Ω—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
            if item.name in ['botsort', 'bot_sort_legacy']:
                for subitem in sorted(item.iterdir()):
                    if subitem.is_file() and subitem.suffix == '.py':
                        print(f"    üìÑ {subitem.name}")
                    elif subitem.is_dir():
                        print(f"    üìÅ {subitem.name}/")
        elif item.suffix == '.py':
            print(f"  üìÑ {item.name}")

def create_fixed_import_helper():
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–º–æ—â–Ω–∏–∫–∞ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–º–ø–æ—Ä—Ç–æ–≤"""
    print("\n=== CREATING IMPORT HELPER ===")
    
    helper_code = '''
import os
import sys
from pathlib import Path

def setup_supervisely_imports():
    """
    –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—É—Ç–µ–π –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞ supervisely –º–æ–¥—É–ª–µ–π
    –í—ã–∑—ã–≤–∞–π—Ç–µ —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –≤ –Ω–∞—á–∞–ª–µ –≤–∞—à–∏—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤
    """
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—É—Ç–∏ –∫ supervisely
    current_dir = Path.cwd()
    script_dir = Path(__file__).parent if '__file__' in globals() else Path.cwd()
    
    possible_paths = [
        current_dir / "supervisely",
        script_dir / "supervisely",
        script_dir.parent / "supervisely", 
        current_dir.parent / "supervisely"
    ]
    
    sly_root = None
    for path in possible_paths:
        if path.exists() and (path / "supervisely").exists():
            sly_root = path
            break
    
    if sly_root and str(sly_root) not in sys.path:
        sys.path.insert(0, str(sly_root))
        print(f"Added supervisely path: {sly_root}")
        return sly_root
    
    return None

def safe_import_trackers():
    """
    –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –∏–º–ø–æ—Ä—Ç —Ç—Ä–µ–∫–µ—Ä–æ–≤ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
    """
    trackers = {}
    
    try:
        from supervisely.nn.tracker.botsort.tracker.mc_bot_sort import BoTSORT
        trackers['BoTSORT_ORIG'] = BoTSORT
        print("‚úÖ Original BoTSORT imported successfully")
    except ImportError as e:
        print(f"‚ö†Ô∏è  Original BoTSORT import failed: {e}")
        trackers['BoTSORT_ORIG'] = None
    
    try:
        from supervisely.nn.tracker.botsort.sly_tracker import BoTTracker
        trackers['BoTTracker'] = BoTTracker
        print("‚úÖ Supervisely BoTTracker imported successfully")
    except ImportError as e:
        print(f"‚ö†Ô∏è  Supervisely BoTTracker import failed: {e}")
        trackers['BoTTracker'] = None
    
    return trackers

if __name__ == "__main__":
    setup_supervisely_imports()
'''
    
    helper_file = Path("supervisely_import_helper.py")
    with open(helper_file, 'w') as f:
        f.write(helper_code)
    
    print(f"‚úÖ Created import helper: {helper_file.absolute()}")
    print("   Use: from supervisely_import_helper import setup_supervisely_imports, safe_import_trackers")

def main():
    print("üîç SUPERVISELY IMPORT DIAGNOSTICS")
    print("=" * 50)
    
    # 1. –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞
    sly_path = debug_project_structure()
    
    # 2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö –∏–º–ø–æ—Ä—Ç–æ–≤
    if test_basic_imports(sly_path):
        # 3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤ —Ç—Ä–µ–∫–µ—Ä–æ–≤
        test_tracker_imports()
        
        # 4. –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
        explore_tracker_directory(sly_path)
    
    # 5. –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–º–æ—â–Ω–∏–∫–∞ –¥–ª—è –∏–º–ø–æ—Ä—Ç–æ–≤
    create_fixed_import_helper()
    
    print("\n" + "=" * 50)
    print("üéØ RECOMMENDATIONS:")
    print("1. Use the created 'supervisely_import_helper.py' in your scripts")
    print("2. Check if supervisely directory structure matches expected layout")
    print("3. Verify that all __init__.py files exist in the supervisely package")

if __name__ == "__main__":
    main()